name: ci
on:
  push:
    branches:
      - master
      - main
permissions:
  contents: write # Required to push to gh-pages

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # Specify a Python version, 3.x is okay but specific is better

      - name: Install uv
        uses: astral-sh/setup-uv-action@v1 # Installs uv

      # Cache for uv downloaded packages
      # This helps speed up subsequent builds by caching downloaded wheels/sdists
      - name: Cache uv global packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup-uv.outputs.uv-cache-path }} # Get cache path from setup-uv action
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }} # Cache key based on OS, pyproject.toml and uv.lock
          restore-keys: |
            ${{ runner.os }}-uv-
        id: cache-uv # Give an id to reference the setup-uv action outputs

      # Cache for MkDocs build artifacts (this is for MkDocs' own .cache directory)
      - name: Create cache ID for MkDocs
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV # Weekly cache busting

      - name: Cache MkDocs build artifacts
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache # Path where MkDocs stores its cache
          restore-keys: |
            mkdocs-material-

      - name: Install dependencies from pyproject.toml using uv
        run: uv pip install . # This will read pyproject.toml and install dependencies

      - name: Build and deploy MkDocs site
        run: mkdocs gh-deploy --force
